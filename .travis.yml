sudo: required

language: java

services:
  - docker

# This version will be also tagged as 'latest'
env:
  global:
    - LATEST="3.7.0"

matrix:
  include:
    - jdk: openjdk11
      env: ZOOKEEPER_VERSION=3.7.0 JAVA_VERSION=11-jre-slim

# Upgrade Docker Engine so we can use buildx
before_install:
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce

install:
  - docker --version
  - docker buildx version
  - docker-compose --version
  - echo "ZOOKEEPER VERSION  $ZOOKEEPER_VERSION"
  - echo "JAVA VERSION  $JAVA_VERSION"
  - echo "LATEST VERSION $LATEST"
  - if [ -z ${DOCKER_PASSWORD+x} ]; then echo "Using unauthenticated pulls on PR"; else echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin; fi
  - export CURRENT=${ZOOKEEPER_VERSION}

  # Prepare the environment for multi-arch builds
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - docker buildx create --use

  # Build all of the platforms and cache the result
  - bash docker_buildx

  # Using the multi-arch build cache
  - bash docker_buildx --load

script:
  # Shellcheck main source files
  - shellcheck -s bash start-zk.sh
  - cd test
  # Shellcheck the tests
  - shellcheck -x -e SC1090 -s bash *.sh **/*.sh
  - ./verifyImageLabels.sh # Verify docker image's label
  # Add more tests in the future

# This will deploy from master. Might want to have a single release branch for a little more control
deploy:
  - provider: script
    script: bash docker_push latest
    on:
      repo: wurstmeister/zookeeper-docker
      branch: master
      condition: $CURRENT = $LATEST
  - provider: script
    script: bash docker_push "${ZOOKEEPER_VERSION}"
    on:
      repo: wurstmeister/zookeeper-docker
      # branch: release
